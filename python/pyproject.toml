[project]
name = "adspy"
version = "0.3.0"
description = "Algorithms and Data Structures in Python"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["python", "algorithms", "data structures"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Other Audience",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Implementation",
    "Topic :: Education",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Version Control :: Git",
    "Typing :: Typed",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.4",
    "pytest-random-order>=1.1.1",
    "pytest-xdist>=3.6.1",
    "ruff>=0.9.9",
]

[tool.mypy]
files = [
    "./adspy/**/*.py",
    "./tests/**/*.py",
]
python_version = "3.10"
check_untyped_defs = true
disallow_untyped_defs = true
pretty = true
show_column_numbers = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.3"
addopts = [
    "-s",
    "-vvv",
    "--random-order"
]
testpaths = [
    "tests",
]

[tool.ruff]
indent-width = 4
line-length = 80
show-fixes = true
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
line-ending = "auto"  # automatically detect the appropriate line ending.
quote-style = "double"
skip-magic-trailing-comma = false  # respect magic trailing commas.

[tool.ruff.lint]
select = [
    "A",  # flake8-builtins
    "ANN",  # flake8-annotations
    "ARG",  # flake8-unused-arguments
    "B",  # flake8-bugbear
    "BLE",  # flake8-blind-except
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ERA",  # eradicate
    "F",  # pyflakes
    "FBT",  # flake8-boolean-trap
    "I",  # isort
    "ICN",  # flake8-import-conventions
    "ISC",  # flake8-implicit-str-concat
    "PIE",  # flake8-pie
    "PT",  # pytest-style
    "PYI",  # flake8-pyi
    "Q",  # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "T",  # flake8-print-linter
    "T20",  # flake8-print
    "TC",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "ANN401",  # https://docs.astral.sh/ruff/rules/any-type/
    "ISC001",  # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
]
fixable = [
    "ALL",
    "I",
    "ISC",
    "TC006"
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]
"tests/*.py" = [
    "ANN201",  # https://docs.astral.sh/ruff/rules/missing-return-type-undocumented-public-function/
    "FBT001"  # https://docs.astral.sh/ruff/rules/boolean-type-hint-positional-argument/
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
